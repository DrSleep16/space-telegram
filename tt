# import requests
# import os
# from urllib.parse import urlparse
#
#
# def fetch_spacex_last_launch(url, save_path):
#     response = requests.get(url, stream=True)
#     response.raise_for_status()
#     with open(save_path, 'wb') as file:
#         for chunk in response.iter_content(chunk_size=8192):
#             file.write(chunk)
#
#
# def get_latest_launch_photos():
#     url = 'https://api.spacexdata.com/v4/launches/5eb87d47ffd86e000604b38a'
#
#     response = requests.get(url)
#     response.raise_for_status()
#
#     data = response.json()
#     photos = data['links']['flickr']['original']
#     i = 0
#     for photo in photos:
#         i+=1
#         extension = get_file_extension(photo)
#         fetch_spacex_last_launch(photo,f'{folder_name}/image_{i}{extension}')
#
#
# def get_file_extension(url):
#     parsed_url = urlparse(url)
#     path = parsed_url.path
#     extension = os.path.splitext(path)[1]
#     return extension
#
#
# folder_name = "images"
# if not os.path.exists(folder_name): os.mkdir(folder_name)
#
# get_latest_launch_photos()

# import requests
# import os
#
# def download_apod_images(count, save_directory):
#     url = 'https://api.nasa.gov/planetary/apod'
#     api_key = 'ZDFKgbARwUMVX1fy9enCi2CF8Feli4ewqJFYGasS'  # Замените на ваш собственный API-ключ
#
#     params = {
#         'api_key': api_key,
#         'count': count
#     }
#
#     response = requests.get(url, params=params)
#     response.raise_for_status()
#
#     data = response.json()
#
#     for item in data:
#         image_url = item['url']
#         image_filename = os.path.basename(image_url)
#         save_path = os.path.join(save_directory, image_filename)
#
#         response = requests.get(image_url)
#         response.raise_for_status()
#
#         with open(save_path, 'wb') as file:
#             file.write(response.content)
#             print(f'Saved image: {save_path}')
#
# count = 30
# save_directory = 'apod_images'
#
# if not os.path.exists(save_directory):
#     os.makedirs(save_directory)
#
# download_apod_images(count, save_directory)
